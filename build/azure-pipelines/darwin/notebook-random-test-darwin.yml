steps:
- task: NodeTool@0
  inputs:
    versionSpec: "12.14.1"

- script: |
    set -e
    git fetch origin master
    git merge origin/master
    git log -n 1
  displayName: Update branch

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  inputs:
    versionSpec: "1.x"

- task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
  inputs:
    keyfile: '.yarnrc, remote/.yarnrc, **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
    targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
    vstsFeed: 'vscode-build-cache'

- script: |
    CHILD_CONCURRENCY=1 yarn --frozen-lockfile
  displayName: Install Dependencies
  condition: and(succeeded(), ne(variables['CacheRestored'], 'true'))

- task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
  inputs:
    keyfile: '.yarnrc, remote/.yarnrc, **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
    targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
    vstsFeed: 'vscode-build-cache'
  condition: and(succeeded(), ne(variables['CacheRestored'], 'true'))

- script: |
    yarn electron x64
  displayName: Download Electron

- script: |
    yarn monaco-compile-check
  displayName: Run Monaco Editor Checks

- script: |
    yarn valid-layers-check
  displayName: Run Valid Layers Checks

- script: |
    yarn compile
  displayName: Compile Sources

- script: |
    yarn download-builtin-extensions
  displayName: Download Built-in Extensions

- script: |
    notebook_random_runs=8 notebook_random_test_actions=200 yarn smoketest --notebookRandom --screenshots /tmp/smoke
  displayName: Run Notebook Random Action Test

- task: PublishPipelineArtifact@1
  inputs:
    artifactName: random-test-screenshots
    targetPath: /tmp/smoke
  displayName: 'Publish Screenshots'
  continueOnError: true
  condition: failed()
